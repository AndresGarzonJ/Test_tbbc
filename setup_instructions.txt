---------------- Requisitos previos ---------------- 

git version 2.39.0.windows.2
Python 3.9 
VirtualEnv -> https://pypi.org/project/virtualenv/

---------------- Configuracion de base de datos ---------------- 

1. Abrir una terminal:
	sudo apt-get update
	sudo apt-get install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx
	sudo -u postgres psql

	CREATE DATABASE tbbc;
	CREATE USER admin_tbbc WITH PASSWORD '123456';
	ALTER ROLE admin_tbbc SET client_encoding TO 'utf8';
	ALTER ROLE admin_tbbc SET default_transaction_isolation TO 'read committed';
	ALTER ROLE admin_tbbc SET timezone TO 'UTC';
	GRANT ALL PRIVILEGES ON DATABASE tbbc TO admin_tbbc;
	\q

---------------- Clonación del Repositorio ---------------- 
1. Abrir una terminal y ejecutar
	git clone https://gitlab.com/AndresGarzonJ/test_tbbc.git
	cd test_tbbc

	#windows
	python -m venv venv
	.\venv\Scripts\activate
	pip install -r requirements.txt

	#linux
	virtualenv venv --python=python3
	source venv/bin/activate
	pip install -r requirements.txt

	# Migracion de la base de datos
	cd test_tbbc
	python manage.py migrate
	python manage.py makemigrations
	python manage.py makemigrations api
	python manage.py migrate
	
	python manage.py createsuperuser

	

2. Iniciar el servidor (LOCAL)

	# Correr el Servidor
	python manage.py runserver

	[Opcional - Para ingresar al Gestor por defecto de Django http://localhost:8000/admin]
	python manage.py createsuperuser
	

	# Abrir el navegador e ingresar a http://localhost:8000/


3. Iniciar el servidor en DigitalOcean
	https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04#create-and-configure-a-new-django-project

	# Abrir ~/myprojectdir/myproject/settings.py
	ALLOWED_HOSTS = ['your_server_domain_or_IP', 'second_domain_or_IP', . . ., 'localhost']
	# Añadir al final
	import os
	STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

	# En la terminal de DigitalOcean
	pip install gunicorn
	
	cd test_tbbc
	python manage.py collectstatic
	sudo ufw allow 8000
	python manage.py runserver 0.0.0.0:8000
	http://server_domain_or_IP:8000

